<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
		xmlns:task="http://www.springframework.org/schema/task"
		xsi:schemaLocation="
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">
	<context:annotation-config />
	<context:component-scan base-package="com.djt.share.life.*" />

    <aop:aspectj-autoproxy proxy-target-class="true"/>  

	<!-- Druid-Wall -->
	<bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
		<property name="logViolation" value="true" />
		<property name="throwException" value="false" />
	</bean>

	<!-- DruidDataSource -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="filters" value="log4j,wall" />
		<property name="maxActive" value="${share.life.database.maxActive}" />
		<property name="initialSize" value="${share.life.database.initialSize}" />
		<property name="minIdle" value="${share.life.database.minIdle}" />
		<property name="maxWait" value="${share.life.database.maxWait}" />
		<property name="timeBetweenEvictionRunsMillis" value="${share.life.database.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${share.life.database.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${share.life.database.validationQuery}" />
		<property name="testWhileIdle" value="${share.life.database.testWhileIdle}" />
		<property name="testOnBorrow" value="${share.life.database.testOnBorrow}" />
		<property name="testOnReturn" value="${share.life.database.testOnReturn}" />
		<property name="poolPreparedStatements" value="${share.life.database.poolPreparedStatements}" />
		<property name="maxOpenPreparedStatements" value="${share.life.database.maxOpenPreparedStatements}" />
		<property name="proxyFilters">
			<list>
				<ref bean="wall-filter" />
			</list>
		</property>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="spring/spring-mybatis.xml" />
		<property name="mapperLocations" value="classpath:com/djt/share/life/orm/*.xml"/>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.djt.share.life.orm*" />
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<task:annotation-driven />
</beans>